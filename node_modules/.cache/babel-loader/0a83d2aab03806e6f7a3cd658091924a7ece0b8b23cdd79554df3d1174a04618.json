{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ddcat\\\\OneDrive\\\\Desktop\\\\realproj\\\\asedfasf\\\\src\\\\components\\\\InfoCardsList.tsx\",\n  _s = $RefreshSig$();\nimport InfoCard from \"./InfoCard\";\nimport { useAutoAnimate } from \"@formkit/auto-animate/react\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const InfoCardList = ({\n  items\n}) => {\n  _s();\n  const [offset, setOffset] = useState(0);\n  const [animationParent] = useAutoAnimate();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"inline-flex\",\n      alignItems: \"stretch\",\n      margin: \"auto\",\n      width: \"max-content\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      style: {\n        marginTop: \"100px\",\n        height: \"50px\",\n        width: \"50px\"\n      },\n      onClick: () => {\n        setOffset(prev => prev - 1);\n      },\n      children: \"left\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      ref: animationParent,\n      children: items.slice(offset, offset + 3).map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(InfoCard, {\n          imageUrl: item.imageUrl,\n          titleText: item.name,\n          desc: item.description,\n          onClick: () => {}\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 29\n        }, this)\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n      onClick: () => {\n        setOffset(prev => prev + 1);\n      },\n      children: \"right\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n};\n_s(InfoCardList, \"Esw1qY4pxm0epoYs9MAsFW1zeHo=\", false, function () {\n  return [useAutoAnimate];\n});\n_c = InfoCardList;\nexport default InfoCardList;\nvar _c;\n$RefreshReg$(_c, \"InfoCardList\");","map":{"version":3,"names":["InfoCard","useAutoAnimate","useState","jsxDEV","_jsxDEV","InfoCardList","items","_s","offset","setOffset","animationParent","style","display","alignItems","margin","width","children","marginTop","height","onClick","prev","fileName","_jsxFileName","lineNumber","columnNumber","ref","slice","map","item","imageUrl","titleText","name","desc","description","id","_c","$RefreshReg$"],"sources":["C:/Users/ddcat/OneDrive/Desktop/realproj/asedfasf/src/components/InfoCardsList.tsx"],"sourcesContent":["import {MachineData} from \"../App\";\r\nimport InfoCard from \"./InfoCard\";\r\nimport { useAutoAnimate } from \"@formkit/auto-animate/react\";\r\nimport {useState} from \"react\";\r\n\r\n\r\n\r\nexport type InfoCardListParams = {\r\n    items: MachineData[]\r\n}\r\n\r\nexport const InfoCardList = ({items}: InfoCardListParams) => {\r\n\r\n    const [offset, setOffset] = useState(0)\r\n\r\n    const [animationParent] = useAutoAnimate()\r\n\r\n\r\n    return (\r\n\r\n        <div style={{\r\n            display: \"inline-flex\",\r\n            alignItems: \"stretch\",\r\n            margin: \"auto\",\r\n            width: \"max-content\",\r\n            \r\n        }}>\r\n            <button style={{\r\n                marginTop: \"100px\",\r\n                height: \"50px\",\r\n                width: \"50px\",\r\n\r\n            }}\r\n                onClick={()=>{setOffset((prev) => prev - 1)}}\r\n            >\r\n                left\r\n            </button>\r\n            <ul ref={animationParent}>\r\n                {\r\n                    items.slice(offset, offset + 3).map((item: MachineData) =>\r\n                        <li key={item.id}>\r\n                            <InfoCard\r\n                                imageUrl={item.imageUrl}\r\n                                titleText={item.name}\r\n                                desc={item.description}\r\n                                onClick={() => {}}\r\n                            />\r\n                        </li>\r\n                    )\r\n                }\r\n            </ul>\r\n            <text\r\n                onClick={()=>{setOffset((prev) => prev + 1)}}\r\n            >\r\n                right\r\n            </text>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default InfoCardList"],"mappings":";;AACA,OAAOA,QAAQ,MAAM,YAAY;AACjC,SAASC,cAAc,QAAQ,6BAA6B;AAC5D,SAAQC,QAAQ,QAAO,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAQ/B,OAAO,MAAMC,YAAY,GAAGA,CAAC;EAACC;AAAyB,CAAC,KAAK;EAAAC,EAAA;EAEzD,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAAC,CAAC,CAAC;EAEvC,MAAM,CAACQ,eAAe,CAAC,GAAGT,cAAc,CAAC,CAAC;EAG1C,oBAEIG,OAAA;IAAKO,KAAK,EAAE;MACRC,OAAO,EAAE,aAAa;MACtBC,UAAU,EAAE,SAAS;MACrBC,MAAM,EAAE,MAAM;MACdC,KAAK,EAAE;IAEX,CAAE;IAAAC,QAAA,gBACEZ,OAAA;MAAQO,KAAK,EAAE;QACXM,SAAS,EAAE,OAAO;QAClBC,MAAM,EAAE,MAAM;QACdH,KAAK,EAAE;MAEX,CAAE;MACEI,OAAO,EAAEA,CAAA,KAAI;QAACV,SAAS,CAAEW,IAAI,IAAKA,IAAI,GAAG,CAAC,CAAC;MAAA,CAAE;MAAAJ,QAAA,EAChD;IAED;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACTpB,OAAA;MAAIqB,GAAG,EAAEf,eAAgB;MAAAM,QAAA,EAEjBV,KAAK,CAACoB,KAAK,CAAClB,MAAM,EAAEA,MAAM,GAAG,CAAC,CAAC,CAACmB,GAAG,CAAEC,IAAiB,iBAClDxB,OAAA;QAAAY,QAAA,eACIZ,OAAA,CAACJ,QAAQ;UACL6B,QAAQ,EAAED,IAAI,CAACC,QAAS;UACxBC,SAAS,EAAEF,IAAI,CAACG,IAAK;UACrBC,IAAI,EAAEJ,IAAI,CAACK,WAAY;UACvBd,OAAO,EAAEA,CAAA,KAAM,CAAC;QAAE;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACrB;MAAC,GANGI,IAAI,CAACM,EAAE;QAAAb,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAOZ,CACR;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEL,CAAC,eACLpB,OAAA;MACIe,OAAO,EAAEA,CAAA,KAAI;QAACV,SAAS,CAAEW,IAAI,IAAKA,IAAI,GAAG,CAAC,CAAC;MAAA,CAAE;MAAAJ,QAAA,EAChD;IAED;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEd,CAAC;AAAAjB,EAAA,CA/CYF,YAAY;EAAA,QAIKJ,cAAc;AAAA;AAAAkC,EAAA,GAJ/B9B,YAAY;AAiDzB,eAAeA,YAAY;AAAA,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}